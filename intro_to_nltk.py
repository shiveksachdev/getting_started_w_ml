# -*- coding: utf-8 -*-
"""Intro to NLTK

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/102Oq1Mio1m7JWgYnvY40U-xwXhIUG4-j
"""

import nltk
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')
nltk.download('stopwords')
from nltk.corpus import stopwords 
from nltk.tokenize import word_tokenize

sentence = "Hello, My name is LL!"
print(sentence)

a = 10
b = 20
c = a + b
print(c)

print(sentence)

tokens = nltk.word_tokenize(sentence)

sentence = "Hello, My Name is Shivek and I'm Hungry AF!"

print(sentence)

tokens = nltk.word_tokenize(sentence)

print(tokens)

tagged = nltk.pos_tag(tokens)

print(tagged)

# CC coordinating conjunction
# CD cardinal digit
# DT determiner
# EX existential there (like: "there is" ... think of it like "there exists")
# FW foreign word
# IN preposition/subordinating conjunction
# JJ adjective 'big'
# JJR adjective, comparative 'bigger'
# JJS adjective, superlative 'biggest'
# LS list marker 1)
# MD modal could, will
# NN noun, singular 'desk'
# NNS noun plural 'desks'
# NNP proper noun, singular 'Harrison'
# NNPS proper noun, plural 'Americans'
# PDT predeterminer 'all the kids'
# POS possessive ending parent's
# PRP personal pronoun I, he, she
# PRP$ possessive pronoun my, his, hers
# RB adverb very, silently,
# RBR adverb, comparative better
# RBS adverb, superlative best
# RP particle give up
# TO to go 'to' the store.
# UH interjection errrrrrrrm
# VB verb, base form take
# VBD verb, past tense took
# VBG verb, gerund/present participle taking
# VBN verb, past participle taken
# VBP verb, sing. present, non-3d take
# VBZ verb, 3rd person sing. present takes
# WDT wh-determiner which
# WP wh-pronoun who, what
# WP$ possessive wh-pronoun whose
# WRB wh-abverb where, when

new_words= [word for word in tokens if word.isalnum()]

print(tokens)
print(new_words)

from nltk.corpus import stopwords
set(stopwords.words('english'))

sentence_two = "Hi! How are you? My name is Shivek and I'm Hungry AF despite eating so much, what about you?"
stop_words = set(stopwords.words('english')) 
word_tokens = word_tokenize(sentence_two) 
filtered_sentence = [w for w in word_tokens if not w in stop_words] 
  
filtered_sentence = [] 
  
for w in word_tokens: 
    if w not in stop_words: 
        filtered_sentence.append(w) 
  
print(word_tokens) 
print(filtered_sentence)

